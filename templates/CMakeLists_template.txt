cmake_minimum_required(VERSION 2.8)

# We default to clang compiler in order to use our own clang plugin.
if(NOT CMAKE_CXX_COMPILER AND NOT DEFINED ENV{CXX})
	find_program(CLANG_EXECUTABLE NAMES clang-9 clang-8 clang-7 clang-6 clang)
	find_program(CLANGPP_EXECUTABLE NAMES clang++-9 clang++-8 clang++-7 clang++-6 clang++)
	if(CLANG_EXECUTABLE)
		set(CMAKE_C_COMPILER ${CLANG_EXECUTABLE})
		set(CMAKE_CXX_COMPILER ${CLANGPP_EXECUTABLE})
	else()
		message(WARNING "Install clang to get better diagnostics!")
	endif()
else()
	message(STATUS "CMAKE_CXX_COMPILER already set to ${CMAKE_CXX_COMPILER}")
endif()

project(@package_name)

find_package(catkin REQUIRED COMPONENTS
	roscpp
	nimbro_fsm2
)

catkin_package()

include_directories(include ${catkin_INCLUDE_DIRS})

set(CMAKE_CXX_STANDARD 17)

@{
driver_lower = driver.lower()
state_path = "src/states/" + state_filename + ".cpp"
if state_ns:
	state_path ="src/states/" + state_ns + "/" + state_filename + ".cpp"
}
add_executable(@package_name
	src/@driver_lower@ .cpp@[if create_state]
	@state_path@[end if]
)

target_link_libraries(@package_name
	${catkin_LIBRARIES}
)
